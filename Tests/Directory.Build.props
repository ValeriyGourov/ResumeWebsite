<Project InitialTargets="SetAssemblyAttributesForTestProjects">

	<Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" />

	<PropertyGroup>
		<!--
		Displays error on console in addition to the log file. Note that this feature comeswith a performance impact.
		For more information, visit https://learn.microsoft.com/dotnet/core/testing/unit-testing-platform-integration-dotnet-test#show-failure-per-test
		-->
		<TestingPlatformShowTestsFailure>true</TestingPlatformShowTestsFailure>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="AutoFixture" Version="4.*" />
		<PackageReference Include="AutoFixture.AutoMoq" Version="4.*" />
		<PackageReference Include="FluentAssertions" Version="8.*" />
		<PackageReference Include="FluentAssertions.Analyzers" Version="*">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Moq" Version="4.*" />
		<PackageReference Include="Moq.AutoMock" Version="3.*" />
	</ItemGroup>

	<!--Задача для установки проектам тестов общих атрибутов сборки.-->
	<Target Name="SetAssemblyAttributesForTestProjects">

		<!--
		Обрабатывая файл проекта как обычный XML извлекаем значение артибута "Sdk"
		элемента "Project".
		-->
		<XmlPeek XmlInputPath="$(MSBuildProjectFile)"
				Query="Project/@Sdk">
			<Output TaskParameter="Result" ItemName="ProjectSdk" />
		</XmlPeek>

		<!--
		Если это проект тестов (т.е. на основе SDK "MSTest.Sdk"), то добавляем
		необходимые атрибуты сборки. Атрибуты появятся в автоматически сгенерированном
		файле obj\<Конфигурация сборки>\<версия .NET>\<Имя проекта>.AssemblyInfo.cs.
		-->
		<ItemGroup Condition="@(ProjectSdk) == 'MSTest.Sdk'">
			<AssemblyAttribute Include="Microsoft.VisualStudio.TestTools.UnitTesting.ParallelizeAttribute">
				<Scope>Microsoft.VisualStudio.TestTools.UnitTesting.ExecutionScope.MethodLevel</Scope>
				<Scope_IsLiteral>true</Scope_IsLiteral>
			</AssemblyAttribute>
		</ItemGroup>

	</Target>

	<PropertyGroup Condition="$(MSBuildProjectName.EndsWith('.UnitTests'))">
		<GenerateDocumentationFile>false</GenerateDocumentationFile>
		<NoWarn>$(NoWarn);1591</NoWarn>
	</PropertyGroup>

	<ItemGroup>
		<InternalsVisibleTo Include="DynamicProxyGenAssembly2" />
	</ItemGroup>

</Project>
